import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart'; // Import Firebase Core package
import 'package:firebase_auth/firebase_auth.dart'; // Import Firebase Auth package

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  final Future<FirebaseApp> _initialization = Firebase.initializeApp(); // Initialize Firebase

  @override
  Widget build(BuildContext context) {
    return FutureBuilder(
      future: _initialization,
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return CircularProgressIndicator(); // Show loading indicator while Firebase initializes
        }
        if (snapshot.hasError) {
          return Text('Error: ${snapshot.error}');
        }
        return MaterialApp(
          title: 'OTP Verification',
          theme: ThemeData(
            primarySwatch: Colors.blue,
          ),
          home: OTPScreen(), // Display OTPScreen as the home screen
        );
      },
    );
  }
}

class OTPScreen extends StatefulWidget {
  @override
  _OTPScreenState createState() => _OTPScreenState();
}

class _OTPScreenState extends State<OTPScreen> {
  final FirebaseAuth _auth = FirebaseAuth.instance; // Get an instance of FirebaseAuth
  late String _verificationId = ''; // Variable to store the verification ID
  late String _smsCode = ''; // Variable to store the entered SMS code

  // Function to initiate phone number verification
  Future<void> _verifyPhoneNumber() async {
    await _auth.verifyPhoneNumber(
      phoneNumber: '+1234567890', // Replace with your phone number
      verificationCompleted: (PhoneAuthCredential credential) async {
        await _auth.signInWithCredential(credential); // Automatically sign in if verification is completed
      },
      verificationFailed: (FirebaseAuthException e) {
        _scaffoldKey.currentState.showSnackBar(new SnackBar(content: new Text('Verification failed: ${e.message}')));
        // Handle verification failure
      },
      codeSent: (String verificationId, int? resendToken) {
        _scaffoldKey.currentState.showSnackBar(new SnackBar(content: new Text('Code sent to $_verificationId'))); // Print verification ID to debug console
        setState(() {
          _verificationId = verificationId; // Save verification ID to use later
        });
      },
      codeAutoRetrievalTimeout: (String verificationId) {
        _scaffoldKey.currentState.showSnackBar(new SnackBar(content: new Text('Timeout reached for $_verificationId'))); // Print timeout message to debug console
        // Handle timeout
      },
    );
  }

  // Function to sign in with phone number using the entered OTP
  Future<void> _signInWithPhoneNumber() async {
    try {
      final AuthCredential credential = PhoneAuthProvider.credential(
        verificationId: _verificationId, // Get verification ID
        smsCode: _smsCode, // Get entered OTP
      );
      final UserCredential userCredential = await _auth.signInWithCredential(credential); // Sign in with provided credential
      final User? user = userCredential.user;
      _scaffoldKey.currentState.showSnackBar(new SnackBar(content: new Text('User signed in: $user'))); // Print user info to debug console
      // Navigate to the next screen after successful sign-in
    } catch (e) {
      _scaffoldKey.currentState.showSnackBar(new SnackBar(content: new Text('Error signing in: $e')));
      // Handle sign-in error
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('OTP Verification'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: _verifyPhoneNumber,
              child: Text('Verify Phone Number'),
            ),
            SizedBox(height: 20),
            TextFormField(
              onChanged: (value) {
                setState(() {
                  _smsCode = value; // Update entered OTP value
                });
              },
              keyboardType: TextInputType.number,
              decoration: InputDecoration(
                labelText: 'Enter OTP',
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _signInWithPhoneNumber,
              child: Text('Sign In'),
            ),
          ],
        ),
      ),
    );
  }
}















































class OtpScreen extends StatelessWidget {
  final TextEditingController _otpController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: Stack(
        children: <Widget>[
          SingleChildScrollView(
            child: Container(
              child: Column(
                children: <Widget>[
                  // Existing UI code...
                  SizedBox(height: 30),
                  Padding(
                    padding: EdgeInsets.symmetric(horizontal: 30),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: <Widget>[
                        Text(
                          "Enter the OTP:",
                          style: GoogleFonts.poppins(
                            color: Colors.grey[800],
                            fontSize: 18,
                            fontWeight: FontWeight.w700,
                          ),
                        ),
                        SizedBox(height: 30),
                        TextField(
                          controller: _otpController,
                          keyboardType: TextInputType.number,
                          decoration: InputDecoration(
                            hintText: "Enter OTP",
                            border: OutlineInputBorder(),
                          ),
                        ),
                        SizedBox(height: 30),
                        GestureDetector(
                          onTap: () {
                            // Verify OTP when the "Login" button is tapped
                            _verifyOTP(context);
                          },
                          child: Container(
                            height: 50,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(10),
                              color: Color.fromRGBO(142, 148, 255, 1),
                            ),
                            child: Center(
                              child: Text(
                                "Login",
                                style: GoogleFonts.poppins(
                                  color: Colors.white,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                          ),
                        ),
                      ],
                    ),
                  ),
                  SizedBox(height: 30),
                  // Existing UI code...
                ],
              ),
            ),
          ),
          // Existing UI code...
        ],
      ),
    );
  }

  void _verifyOTP(BuildContext context) async {
    String otp = _otpController.text.trim();

    if (otp.length != 6) {
      // Show error message if OTP is not 6 digits
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Please enter a valid OTP')),
      );
      return;
    }

    // Perform OTP verification using Firebase Authentication
    try {
      // Sign in with the verification ID and OTP
      final AuthCredential credential = PhoneAuthProvider.credential(
        verificationId: 'YOUR_VERIFICATION_ID', // Replace with the actual verification ID
        smsCode: otp,
      );
      await FirebaseAuth.instance.signInWithCredential(credential);

      // If OTP verification succeeds, navigate to the next screen
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => NextScreen()),
      );
    } catch (e) {
      // Handle OTP verification failure
      print('Error verifying OTP: $e');
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('Failed to verify OTP')),
      );
    }
  }
}


